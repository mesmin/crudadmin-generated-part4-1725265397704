{"AppConfigCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AppConfigCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    key: '',\n    value: '',\n    created_at: '',\n    updated_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/app_config');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/app_config/${editingId}`, formData);\n    } else {\n      await axios.post('/api/app_config', formData);\n    }\n    setFormData({\n      id: '',\n      key: '',\n      value: '',\n      created_at: '',\n      updated_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/app_config/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>AppConfig CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"key\">Key:</label>\n          <input\n            type=\"text\"\n            id=\"key\"\n            name=\"key\"\n            value={formData['key']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"value\">Value:</label>\n          <input\n            type=\"text\"\n            id=\"value\"\n            name=\"value\"\n            value={formData['value']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"updated_at\">UpdatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"updated_at\"\n            name=\"updated_at\"\n            value={formData['updated_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Key</th>\n            <th>Value</th>\n            <th>CreatedAt</th>\n            <th>UpdatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['key']}</td>\n              <td>{item['value']}</td>\n              <td>{item['created_at']}</td>\n              <td>{item['updated_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AppConfigCRUD;","BusinessProfileCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst BusinessProfileCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    user_id: '',\n    profile_data: '',\n    created_at: '',\n    updated_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/business_profile');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/business_profile/${editingId}`, formData);\n    } else {\n      await axios.post('/api/business_profile', formData);\n    }\n    setFormData({\n      id: '',\n      user_id: '',\n      profile_data: '',\n      created_at: '',\n      updated_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/business_profile/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>BusinessProfile CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user_id\">UserId:</label>\n          <input\n            type=\"text\"\n            id=\"user_id\"\n            name=\"user_id\"\n            value={formData['user_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"profile_data\">ProfileData:</label>\n          <input\n            type=\"text\"\n            id=\"profile_data\"\n            name=\"profile_data\"\n            value={formData['profile_data']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"updated_at\">UpdatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"updated_at\"\n            name=\"updated_at\"\n            value={formData['updated_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>UserId</th>\n            <th>ProfileData</th>\n            <th>CreatedAt</th>\n            <th>UpdatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['user_id']}</td>\n              <td>{item['profile_data']}</td>\n              <td>{item['created_at']}</td>\n              <td>{item['updated_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BusinessProfileCRUD;","BusinessesCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst BusinessesCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    business_name: '',\n    address: '',\n    phone: '',\n    email: '',\n    username: '',\n    password_hash: '',\n    created_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/businesses');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/businesses/${editingId}`, formData);\n    } else {\n      await axios.post('/api/businesses', formData);\n    }\n    setFormData({\n      id: '',\n      business_name: '',\n      address: '',\n      phone: '',\n      email: '',\n      username: '',\n      password_hash: '',\n      created_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/businesses/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Businesses CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"business_name\">BusinessName:</label>\n          <input\n            type=\"text\"\n            id=\"business_name\"\n            name=\"business_name\"\n            value={formData['business_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"address\">Address:</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={formData['address']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formData['phone']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={formData['email']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData['username']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password_hash\">PasswordHash:</label>\n          <input\n            type=\"text\"\n            id=\"password_hash\"\n            name=\"password_hash\"\n            value={formData['password_hash']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>BusinessName</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>Email</th>\n            <th>Username</th>\n            <th>PasswordHash</th>\n            <th>CreatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['business_name']}</td>\n              <td>{item['address']}</td>\n              <td>{item['phone']}</td>\n              <td>{item['email']}</td>\n              <td>{item['username']}</td>\n              <td>{item['password_hash']}</td>\n              <td>{item['created_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BusinessesCRUD;","PlansCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst PlansCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    description: '',\n    price: '',\n    created_at: '',\n    updated_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/plans');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/plans/${editingId}`, formData);\n    } else {\n      await axios.post('/api/plans', formData);\n    }\n    setFormData({\n      id: '',\n      name: '',\n      description: '',\n      price: '',\n      created_at: '',\n      updated_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/plans/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Plans CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData['name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description:</label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={formData['description']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"price\">Price:</label>\n          <input\n            type=\"text\"\n            id=\"price\"\n            name=\"price\"\n            value={formData['price']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"updated_at\">UpdatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"updated_at\"\n            name=\"updated_at\"\n            value={formData['updated_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Price</th>\n            <th>CreatedAt</th>\n            <th>UpdatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['name']}</td>\n              <td>{item['description']}</td>\n              <td>{item['price']}</td>\n              <td>{item['created_at']}</td>\n              <td>{item['updated_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PlansCRUD;","QueueItemsCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst QueueItemsCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    queue_id: '',\n    user_id: '',\n    name: '',\n    status: '',\n    wait_time: '',\n    timestamp: '',\n    position: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/queue_items');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/queue_items/${editingId}`, formData);\n    } else {\n      await axios.post('/api/queue_items', formData);\n    }\n    setFormData({\n      id: '',\n      queue_id: '',\n      user_id: '',\n      name: '',\n      status: '',\n      wait_time: '',\n      timestamp: '',\n      position: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/queue_items/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>QueueItems CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"queue_id\">QueueId:</label>\n          <input\n            type=\"text\"\n            id=\"queue_id\"\n            name=\"queue_id\"\n            value={formData['queue_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user_id\">UserId:</label>\n          <input\n            type=\"text\"\n            id=\"user_id\"\n            name=\"user_id\"\n            value={formData['user_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData['name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"status\">Status:</label>\n          <input\n            type=\"text\"\n            id=\"status\"\n            name=\"status\"\n            value={formData['status']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"wait_time\">WaitTime:</label>\n          <input\n            type=\"text\"\n            id=\"wait_time\"\n            name=\"wait_time\"\n            value={formData['wait_time']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"timestamp\">Timestamp:</label>\n          <input\n            type=\"text\"\n            id=\"timestamp\"\n            name=\"timestamp\"\n            value={formData['timestamp']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"position\">Position:</label>\n          <input\n            type=\"text\"\n            id=\"position\"\n            name=\"position\"\n            value={formData['position']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>QueueId</th>\n            <th>UserId</th>\n            <th>Name</th>\n            <th>Status</th>\n            <th>WaitTime</th>\n            <th>Timestamp</th>\n            <th>Position</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['queue_id']}</td>\n              <td>{item['user_id']}</td>\n              <td>{item['name']}</td>\n              <td>{item['status']}</td>\n              <td>{item['wait_time']}</td>\n              <td>{item['timestamp']}</td>\n              <td>{item['position']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default QueueItemsCRUD;","QueueManagerCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst QueueManagerCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    queue_id: '',\n    now_serving: '',\n    total_waiting: '',\n    avg_wait_time: '',\n    last_updated: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/queue_manager');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/queue_manager/${editingId}`, formData);\n    } else {\n      await axios.post('/api/queue_manager', formData);\n    }\n    setFormData({\n      id: '',\n      queue_id: '',\n      now_serving: '',\n      total_waiting: '',\n      avg_wait_time: '',\n      last_updated: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/queue_manager/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>QueueManager CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"queue_id\">QueueId:</label>\n          <input\n            type=\"text\"\n            id=\"queue_id\"\n            name=\"queue_id\"\n            value={formData['queue_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"now_serving\">NowServing:</label>\n          <input\n            type=\"text\"\n            id=\"now_serving\"\n            name=\"now_serving\"\n            value={formData['now_serving']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"total_waiting\">TotalWaiting:</label>\n          <input\n            type=\"text\"\n            id=\"total_waiting\"\n            name=\"total_waiting\"\n            value={formData['total_waiting']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"avg_wait_time\">AvgWaitTime:</label>\n          <input\n            type=\"text\"\n            id=\"avg_wait_time\"\n            name=\"avg_wait_time\"\n            value={formData['avg_wait_time']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"last_updated\">LastUpdated:</label>\n          <input\n            type=\"text\"\n            id=\"last_updated\"\n            name=\"last_updated\"\n            value={formData['last_updated']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>QueueId</th>\n            <th>NowServing</th>\n            <th>TotalWaiting</th>\n            <th>AvgWaitTime</th>\n            <th>LastUpdated</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['queue_id']}</td>\n              <td>{item['now_serving']}</td>\n              <td>{item['total_waiting']}</td>\n              <td>{item['avg_wait_time']}</td>\n              <td>{item['last_updated']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default QueueManagerCRUD;","QueueParticipantsCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst QueueParticipantsCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    user_id: '',\n    queue_id: '',\n    position: '',\n    joined_at: '',\n    updated_at: '',\n    status: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/queue_participants');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/queue_participants/${editingId}`, formData);\n    } else {\n      await axios.post('/api/queue_participants', formData);\n    }\n    setFormData({\n      id: '',\n      user_id: '',\n      queue_id: '',\n      position: '',\n      joined_at: '',\n      updated_at: '',\n      status: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/queue_participants/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>QueueParticipants CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user_id\">UserId:</label>\n          <input\n            type=\"text\"\n            id=\"user_id\"\n            name=\"user_id\"\n            value={formData['user_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"queue_id\">QueueId:</label>\n          <input\n            type=\"text\"\n            id=\"queue_id\"\n            name=\"queue_id\"\n            value={formData['queue_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"position\">Position:</label>\n          <input\n            type=\"text\"\n            id=\"position\"\n            name=\"position\"\n            value={formData['position']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"joined_at\">JoinedAt:</label>\n          <input\n            type=\"text\"\n            id=\"joined_at\"\n            name=\"joined_at\"\n            value={formData['joined_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"updated_at\">UpdatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"updated_at\"\n            name=\"updated_at\"\n            value={formData['updated_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"status\">Status:</label>\n          <input\n            type=\"text\"\n            id=\"status\"\n            name=\"status\"\n            value={formData['status']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>UserId</th>\n            <th>QueueId</th>\n            <th>Position</th>\n            <th>JoinedAt</th>\n            <th>UpdatedAt</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['user_id']}</td>\n              <td>{item['queue_id']}</td>\n              <td>{item['position']}</td>\n              <td>{item['joined_at']}</td>\n              <td>{item['updated_at']}</td>\n              <td>{item['status']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default QueueParticipantsCRUD;","QueuesCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst QueuesCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    user_id: '',\n    unique_id: '',\n    name: '',\n    capacity: '',\n    schedule: '',\n    time_open: '',\n    time_closed: '',\n    is_active: '',\n    qr_code_data: '',\n    created_at: '',\n    updated_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/queues');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/queues/${editingId}`, formData);\n    } else {\n      await axios.post('/api/queues', formData);\n    }\n    setFormData({\n      id: '',\n      user_id: '',\n      unique_id: '',\n      name: '',\n      capacity: '',\n      schedule: '',\n      time_open: '',\n      time_closed: '',\n      is_active: '',\n      qr_code_data: '',\n      created_at: '',\n      updated_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/queues/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Queues CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user_id\">UserId:</label>\n          <input\n            type=\"text\"\n            id=\"user_id\"\n            name=\"user_id\"\n            value={formData['user_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"unique_id\">UniqueId:</label>\n          <input\n            type=\"text\"\n            id=\"unique_id\"\n            name=\"unique_id\"\n            value={formData['unique_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData['name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"capacity\">Capacity:</label>\n          <input\n            type=\"text\"\n            id=\"capacity\"\n            name=\"capacity\"\n            value={formData['capacity']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"schedule\">Schedule:</label>\n          <input\n            type=\"text\"\n            id=\"schedule\"\n            name=\"schedule\"\n            value={formData['schedule']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"time_open\">TimeOpen:</label>\n          <input\n            type=\"text\"\n            id=\"time_open\"\n            name=\"time_open\"\n            value={formData['time_open']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"time_closed\">TimeClosed:</label>\n          <input\n            type=\"text\"\n            id=\"time_closed\"\n            name=\"time_closed\"\n            value={formData['time_closed']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"is_active\">IsActive:</label>\n          <input\n            type=\"text\"\n            id=\"is_active\"\n            name=\"is_active\"\n            value={formData['is_active']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"qr_code_data\">QrCodeData:</label>\n          <input\n            type=\"text\"\n            id=\"qr_code_data\"\n            name=\"qr_code_data\"\n            value={formData['qr_code_data']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"updated_at\">UpdatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"updated_at\"\n            name=\"updated_at\"\n            value={formData['updated_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>UserId</th>\n            <th>UniqueId</th>\n            <th>Name</th>\n            <th>Capacity</th>\n            <th>Schedule</th>\n            <th>TimeOpen</th>\n            <th>TimeClosed</th>\n            <th>IsActive</th>\n            <th>QrCodeData</th>\n            <th>CreatedAt</th>\n            <th>UpdatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['user_id']}</td>\n              <td>{item['unique_id']}</td>\n              <td>{item['name']}</td>\n              <td>{item['capacity']}</td>\n              <td>{item['schedule']}</td>\n              <td>{item['time_open']}</td>\n              <td>{item['time_closed']}</td>\n              <td>{item['is_active']}</td>\n              <td>{item['qr_code_data']}</td>\n              <td>{item['created_at']}</td>\n              <td>{item['updated_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default QueuesCRUD;","SessionsCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst SessionsCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    user_id: '',\n    provider: '',\n    access_token: '',\n    refresh_token: '',\n    created_at: '',\n    expires_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/sessions');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/sessions/${editingId}`, formData);\n    } else {\n      await axios.post('/api/sessions', formData);\n    }\n    setFormData({\n      id: '',\n      user_id: '',\n      provider: '',\n      access_token: '',\n      refresh_token: '',\n      created_at: '',\n      expires_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/sessions/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Sessions CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user_id\">UserId:</label>\n          <input\n            type=\"text\"\n            id=\"user_id\"\n            name=\"user_id\"\n            value={formData['user_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"provider\">Provider:</label>\n          <input\n            type=\"text\"\n            id=\"provider\"\n            name=\"provider\"\n            value={formData['provider']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"access_token\">AccessToken:</label>\n          <input\n            type=\"text\"\n            id=\"access_token\"\n            name=\"access_token\"\n            value={formData['access_token']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"refresh_token\">RefreshToken:</label>\n          <input\n            type=\"text\"\n            id=\"refresh_token\"\n            name=\"refresh_token\"\n            value={formData['refresh_token']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"expires_at\">ExpiresAt:</label>\n          <input\n            type=\"text\"\n            id=\"expires_at\"\n            name=\"expires_at\"\n            value={formData['expires_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>UserId</th>\n            <th>Provider</th>\n            <th>AccessToken</th>\n            <th>RefreshToken</th>\n            <th>CreatedAt</th>\n            <th>ExpiresAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['user_id']}</td>\n              <td>{item['provider']}</td>\n              <td>{item['access_token']}</td>\n              <td>{item['refresh_token']}</td>\n              <td>{item['created_at']}</td>\n              <td>{item['expires_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default SessionsCRUD;","SubscriptionsCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst SubscriptionsCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    name: '',\n    max_lines: '',\n    max_capacity: '',\n    price: '',\n    created_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/subscriptions');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/subscriptions/${editingId}`, formData);\n    } else {\n      await axios.post('/api/subscriptions', formData);\n    }\n    setFormData({\n      id: '',\n      name: '',\n      max_lines: '',\n      max_capacity: '',\n      price: '',\n      created_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/subscriptions/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Subscriptions CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData['name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"max_lines\">MaxLines:</label>\n          <input\n            type=\"text\"\n            id=\"max_lines\"\n            name=\"max_lines\"\n            value={formData['max_lines']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"max_capacity\">MaxCapacity:</label>\n          <input\n            type=\"text\"\n            id=\"max_capacity\"\n            name=\"max_capacity\"\n            value={formData['max_capacity']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"price\">Price:</label>\n          <input\n            type=\"text\"\n            id=\"price\"\n            name=\"price\"\n            value={formData['price']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>MaxLines</th>\n            <th>MaxCapacity</th>\n            <th>Price</th>\n            <th>CreatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['name']}</td>\n              <td>{item['max_lines']}</td>\n              <td>{item['max_capacity']}</td>\n              <td>{item['price']}</td>\n              <td>{item['created_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default SubscriptionsCRUD;","UserlinejoinsCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserlinejoinsCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    user_id: '',\n    virtual_line_id: '',\n    join_time: '',\n    exit_time: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/userlinejoins');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/userlinejoins/${editingId}`, formData);\n    } else {\n      await axios.post('/api/userlinejoins', formData);\n    }\n    setFormData({\n      id: '',\n      user_id: '',\n      virtual_line_id: '',\n      join_time: '',\n      exit_time: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/userlinejoins/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Userlinejoins CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user_id\">UserId:</label>\n          <input\n            type=\"text\"\n            id=\"user_id\"\n            name=\"user_id\"\n            value={formData['user_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"virtual_line_id\">VirtualLineId:</label>\n          <input\n            type=\"text\"\n            id=\"virtual_line_id\"\n            name=\"virtual_line_id\"\n            value={formData['virtual_line_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"join_time\">JoinTime:</label>\n          <input\n            type=\"text\"\n            id=\"join_time\"\n            name=\"join_time\"\n            value={formData['join_time']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"exit_time\">ExitTime:</label>\n          <input\n            type=\"text\"\n            id=\"exit_time\"\n            name=\"exit_time\"\n            value={formData['exit_time']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>UserId</th>\n            <th>VirtualLineId</th>\n            <th>JoinTime</th>\n            <th>ExitTime</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['user_id']}</td>\n              <td>{item['virtual_line_id']}</td>\n              <td>{item['join_time']}</td>\n              <td>{item['exit_time']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UserlinejoinsCRUD;","UsersCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UsersCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    is_business_user: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    preferred_name: '',\n    manager_first_name: '',\n    manager_last_name: '',\n    business_email: '',\n    business_name: '',\n    business_address: '',\n    business_phone: '',\n    selected_plan: '',\n    onboarding_completed: '',\n    avatar_url: '',\n    created_at: '',\n    updated_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/users');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/users/${editingId}`, formData);\n    } else {\n      await axios.post('/api/users', formData);\n    }\n    setFormData({\n      id: '',\n      is_business_user: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      preferred_name: '',\n      manager_first_name: '',\n      manager_last_name: '',\n      business_email: '',\n      business_name: '',\n      business_address: '',\n      business_phone: '',\n      selected_plan: '',\n      onboarding_completed: '',\n      avatar_url: '',\n      created_at: '',\n      updated_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/users/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Users CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"is_business_user\">IsBusinessUser:</label>\n          <input\n            type=\"text\"\n            id=\"is_business_user\"\n            name=\"is_business_user\"\n            value={formData['is_business_user']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"first_name\">FirstName:</label>\n          <input\n            type=\"text\"\n            id=\"first_name\"\n            name=\"first_name\"\n            value={formData['first_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"last_name\">LastName:</label>\n          <input\n            type=\"text\"\n            id=\"last_name\"\n            name=\"last_name\"\n            value={formData['last_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={formData['email']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formData['phone']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"preferred_name\">PreferredName:</label>\n          <input\n            type=\"text\"\n            id=\"preferred_name\"\n            name=\"preferred_name\"\n            value={formData['preferred_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"manager_first_name\">ManagerFirstName:</label>\n          <input\n            type=\"text\"\n            id=\"manager_first_name\"\n            name=\"manager_first_name\"\n            value={formData['manager_first_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"manager_last_name\">ManagerLastName:</label>\n          <input\n            type=\"text\"\n            id=\"manager_last_name\"\n            name=\"manager_last_name\"\n            value={formData['manager_last_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"business_email\">BusinessEmail:</label>\n          <input\n            type=\"text\"\n            id=\"business_email\"\n            name=\"business_email\"\n            value={formData['business_email']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"business_name\">BusinessName:</label>\n          <input\n            type=\"text\"\n            id=\"business_name\"\n            name=\"business_name\"\n            value={formData['business_name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"business_address\">BusinessAddress:</label>\n          <input\n            type=\"text\"\n            id=\"business_address\"\n            name=\"business_address\"\n            value={formData['business_address']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"business_phone\">BusinessPhone:</label>\n          <input\n            type=\"text\"\n            id=\"business_phone\"\n            name=\"business_phone\"\n            value={formData['business_phone']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"selected_plan\">SelectedPlan:</label>\n          <input\n            type=\"text\"\n            id=\"selected_plan\"\n            name=\"selected_plan\"\n            value={formData['selected_plan']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"onboarding_completed\">OnboardingCompleted:</label>\n          <input\n            type=\"text\"\n            id=\"onboarding_completed\"\n            name=\"onboarding_completed\"\n            value={formData['onboarding_completed']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"avatar_url\">AvatarUrl:</label>\n          <input\n            type=\"text\"\n            id=\"avatar_url\"\n            name=\"avatar_url\"\n            value={formData['avatar_url']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"updated_at\">UpdatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"updated_at\"\n            name=\"updated_at\"\n            value={formData['updated_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>IsBusinessUser</th>\n            <th>FirstName</th>\n            <th>LastName</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>PreferredName</th>\n            <th>ManagerFirstName</th>\n            <th>ManagerLastName</th>\n            <th>BusinessEmail</th>\n            <th>BusinessName</th>\n            <th>BusinessAddress</th>\n            <th>BusinessPhone</th>\n            <th>SelectedPlan</th>\n            <th>OnboardingCompleted</th>\n            <th>AvatarUrl</th>\n            <th>CreatedAt</th>\n            <th>UpdatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['is_business_user']}</td>\n              <td>{item['first_name']}</td>\n              <td>{item['last_name']}</td>\n              <td>{item['email']}</td>\n              <td>{item['phone']}</td>\n              <td>{item['preferred_name']}</td>\n              <td>{item['manager_first_name']}</td>\n              <td>{item['manager_last_name']}</td>\n              <td>{item['business_email']}</td>\n              <td>{item['business_name']}</td>\n              <td>{item['business_address']}</td>\n              <td>{item['business_phone']}</td>\n              <td>{item['selected_plan']}</td>\n              <td>{item['onboarding_completed']}</td>\n              <td>{item['avatar_url']}</td>\n              <td>{item['created_at']}</td>\n              <td>{item['updated_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UsersCRUD;","VirtuallinesCRUD.js":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst VirtuallinesCRUD = () => {\n  const [items, setItems] = useState([]);\n  const [formData, setFormData] = useState({\n    id: '',\n    business_id: '',\n    name: '',\n    capacity: '',\n    unique_code: '',\n    created_at: '',\n  });\n  const [editingId, setEditingId] = useState(null);\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const response = await axios.get('/api/virtuallines');\n    setItems(response.data);\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`/api/virtuallines/${editingId}`, formData);\n    } else {\n      await axios.post('/api/virtuallines', formData);\n    }\n    setFormData({\n      id: '',\n      business_id: '',\n      name: '',\n      capacity: '',\n      unique_code: '',\n      created_at: '',\n    });\n    setEditingId(null);\n    fetchItems();\n  };\n\n  const handleEdit = (item) => {\n    setFormData(item);\n    setEditingId(item.id);\n  };\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/api/virtuallines/${id}`);\n    fetchItems();\n  };\n\n  return (\n    <div>\n      <h2>Virtuallines CRUD</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"id\">Id:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            name=\"id\"\n            value={formData['id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"business_id\">BusinessId:</label>\n          <input\n            type=\"text\"\n            id=\"business_id\"\n            name=\"business_id\"\n            value={formData['business_id']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData['name']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"capacity\">Capacity:</label>\n          <input\n            type=\"text\"\n            id=\"capacity\"\n            name=\"capacity\"\n            value={formData['capacity']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"unique_code\">UniqueCode:</label>\n          <input\n            type=\"text\"\n            id=\"unique_code\"\n            name=\"unique_code\"\n            value={formData['unique_code']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"created_at\">CreatedAt:</label>\n          <input\n            type=\"text\"\n            id=\"created_at\"\n            name=\"created_at\"\n            value={formData['created_at']}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{editingId ? 'Update' : 'Create'}</button>\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>BusinessId</th>\n            <th>Name</th>\n            <th>Capacity</th>\n            <th>UniqueCode</th>\n            <th>CreatedAt</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((item) => (\n            <tr key={item.id}>\n              <td>{item['id']}</td>\n              <td>{item['business_id']}</td>\n              <td>{item['name']}</td>\n              <td>{item['capacity']}</td>\n              <td>{item['unique_code']}</td>\n              <td>{item['created_at']}</td>\n              <td>\n                <button onClick={() => handleEdit(item)}>Edit</button>\n                <button onClick={() => handleDelete(item.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default VirtuallinesCRUD;"}